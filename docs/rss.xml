<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>勺水清欢</title><link>https://WangZhSi.github.io</link><description>个人工具箱, 微信公众号同名</description><copyright>勺水清欢</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://cdn.jsdelivr.net/gh/WangZhSi/WangZhSi.github.io@main/_images/header.JPG</url><title>avatar</title><link>https://WangZhSi.github.io</link></image><lastBuildDate>Mon, 30 Jun 2025 09:01:07 +0000</lastBuildDate><managingEditor>勺水清欢</managingEditor><ttl>60</ttl><webMaster>勺水清欢</webMaster><item><title>Cactus的安装</title><link>https://WangZhSi.github.io/post/Cactus-de-an-zhuang.html</link><description># 写在前面
准备搞个泛基因组系列文章, 走一下图形泛基因组 (graph pan-genome) 的流程, 当前主流的几款软件, 以及分析流程都测一下, 做技术储备. 尽量复现一下结果, 跑一跑下游的分析流程. 本人能力有限, 希望大家多多讨论, 共同进步.

# Cactus 的安装

正常情况下软件安装不应该单独拎出来发一篇, 但是这个软件属实不太好安装, 踩了不少坑. 如果完全按照 GitHub 的步骤安装, 分析中大概率会报错. 我的建议是 **单独创建一个 conda 环境, 在这个环境里面执行后续安装.** 我的环境是 `CentOS 7`, `ldd (GNU libc) 2.17`. 另外请注意, **不要使用 conda 直接安装完整的 cactus**, 版本非常老旧, 很多新的 feature 都没有.

首先是 conda 部分, 创建一个 `python` 环境:

```bash
conda create -n python3.12 -y python=3.12.11 numpy dnachun::kent-tools virtualenv conda-forge::rsync bioconda::vcflib
```

需要说明的是: 
1. `python` 版本实际上 ` &gt;3.9 ` 就可以了, 我这里直接搞了个 `3.12.11`;
2. `numpy`: 按照软件的安装方法, 这个包走 `pip` 安装对环境有要求, 我干脆扔给 `conda` 解决;
3. `kent-tools`: 这个是 `Cactus` 中部分功能会依赖, 直接下载是通过 `wget` 方法, 太慢了;
4. `virtualenv`: 必须安装, 是 `Cactus` 安装重要依赖;
5. `rsync`: 软件里会检测这个工具, 我是集群里没有, 有的话就不用装了;
6. `vcflib`: 处理 `vcf` 需要这个套件, 安装流程里面写的是选装, 但是对于图泛流程, 尤其是需要 `vcf` 输出的情况, 这个软件是必装;

基于这个环境, 就可以走下面的安装步骤了:

```bash 
# 启动刚才的 python 环境, 这里 conda 环境根据你的实际情况来
source /conda/bin/activate python3.12
# 下载, 自己下载后传到集群里也可以
wget https://github.com/ComparativeGenomicsToolkit/cactus/releases/download/v2.9.9/cactus-bin-v2.9.9.tar.gz
# 解压
tar -xzf cactus-bin-v2.9.9.tar.gz
cd cactus-bin-v2.9.9
# 安装
virtualenv -p python3 venv-cactus-v2.9.9
printf 'export PATH=$(pwd)/bin:\$PATH\nexport PYTHONPATH=$(pwd)/lib:\$PYTHONPATH\nexport LD_LIBRARY_PATH=$(pwd)/lib:\$LD_LIBRARY_PATH\n' &gt;&gt; venv-cactus-v2.9.9/bin/activate
source venv-cactus-v2.9.9/bin/activate
python3 -m pip install -U setuptools pip wheel
python3 -m pip install -U .
python3 -m pip install -U -r ./toil-requirement.txt
```

看着多, 一步一步走就可以, 这里需要注意的是, **命令中的 `python3`, 一定要检查一下是不是刚刚安装环境里面的**, 或者都使用 `python`, 不带那个 `3`. 我自己由于 `alias` 了一个 `python3`, 导致这里安装有问题; 

如果 `pip` 安装过慢, 可以通过设置全局 `pip` 镜像解决; 如果哪个包安装错误, 直接使用 conda 安装就可以, 比较灵活.

全部安装完成后, 就可以 `cactus -h` , 可以正常显示帮助了. 后续使用的话, 记得我们是激活了两个环境的: conda 环境以及 cactus 的虚拟环境. 我把这两个环境存在了一个 `env.sh` 里, 后面直接使用比较方便, 仅供参考.

下一篇将介绍 Cactus 软件的基本使用.
。</description><guid isPermaLink="true">https://WangZhSi.github.io/post/Cactus-de-an-zhuang.html</guid><pubDate>Mon, 30 Jun 2025 09:00:32 +0000</pubDate></item><item><title>使用EviAnn做编码基因注释</title><link>https://WangZhSi.github.io/post/shi-yong-EviAnn-zuo-bian-ma-ji-yin-zhu-shi.html</link><description># 软件介绍

`EviAnn` 是 *Steven L. Salzberg* 团队开发的一款编码基因注释软件。</description><guid isPermaLink="true">https://WangZhSi.github.io/post/shi-yong-EviAnn-zuo-bian-ma-ji-yin-zhu-shi.html</guid><pubDate>Tue, 10 Jun 2025 10:18:23 +0000</pubDate></item><item><title>agp文件转换工具</title><link>https://WangZhSi.github.io/post/agp-wen-jian-zhuan-huan-gong-ju.html</link><description># 工具说明

依据不同需求转换 agp 文件, 支持输出/输出 4 列或 9 列 agp 格式, 其中 9 列 agp 格式为标准 agp 格式, 4 列 agp 格式如下:

```bash
# chrom	contig	strand	order
chr1	ctg001	0	1
chr1	ctg002	1	2
chr1	ctg003	0	1
chr2	ctg004	1	1
```

其中第三列: `0` 为正向, `1` 为负向;

# 接口说明

工具接口较多, 具体说明如下:
## 必需参数
- `-i`: 输入 agp 文件, 读取时自动忽略注释行;
- `-o`: 输出 agp 文件, 如存在会覆盖, 不检查路径, 如果路径不存在会报错;
- `-F`: 输出 agp 格式, 4 或 9;

## 非必需参数
- `-s`: tab 分隔的 contig 大小文件, 可以直接使用 `.fai`;
- `-g`: 指定 gap 大小, 默认 100 bp, 只有生成 9 列 agp 会用到, 不要 gap 就设置为 0;
- `--select`: 筛选包含指定字符串的染色体, 像 ragtag 这种软件会把比对上的 chr 和 ctg 放在一起, 可以使用这个接口筛选出包含 chr 或_RagTag 的内容做分析; 支持逗号分隔的多个字段;
- `--filter`: 过滤指定字符串 (replace 方法), 比如去掉_RagTag 后缀; 支持逗号分隔的多个字段;
- `--id2id`: tab 分隔的两列表, 用于替换输出的染色体 id, 如 `group1 -&gt; chr1`;
- `--reverse`: 整条反转某染色体, 支持逗号分隔的多个字段;
- `--nature`: 自然顺序排列染色体序号, 修正 `1,10,2,3....` 排序问题;
- `--sizeOrder`: 基于染色体大小重命名染色体, 最大的染色体为 `chr1`;
- `--prefix`: 重命名染色体时的前缀, 默认为 `chr`;

# 使用示例

例: 针对 ragtag 软件输出的 agp 文件, 仅选择包含字段 chr 的内容, 过滤掉_RagTag 后缀, 输出的 agp 格式为 9 列, gap 大小为 200 bp, 染色体号依据大小重新排序, 新的染色体 ID 前缀为 `NC000`, 则:
```bash
python3 convert_agp.py -i input.agp -o output.agp -F 9 --select chr --filter _Ragtag -g 200 --sizeOrder --prefix NC000
```

# 工具下载

软件部署在 [GitHub](https://github.com/WangZhSi/Bioinformatics_tool/tree/main/convert_agp) 上, 欢迎下载使用.。</description><guid isPermaLink="true">https://WangZhSi.github.io/post/agp-wen-jian-zhuan-huan-gong-ju.html</guid><pubDate>Mon, 21 Apr 2025 10:57:31 +0000</pubDate></item><item><title>泛基因集的识别与可视化</title><link>https://WangZhSi.github.io/post/fan-ji-yin-ji-de-shi-bie-yu-ke-shi-hua.html</link><description># 写在前面
1. 分析基于 [OrthoFinder](https://github.com/davidemms/OrthoFinder) 结果, 这个工具网上教程比较多了, 这里直接使用结果文件;
2. 部分代码参考[发表的葡萄泛基因组文章](https://github.com/NotebookOFXiaoMing/SuperPangenomeofGrapevines);
3. 本质是一个 R 脚本, 可视化部分使用 `ggplot2`, 方便大家自行修改;
# 接口说明
本工具包含以下接口:
- `-i`: OrthoFinder 结果中 `Orthogroups/Orthogroups.GeneCount.tsv` 文件;
- `-o`: 输出文件目录, 文件名已经在脚本中指定, 如果目录不存在**不会**创建;
- `-s`: 统计 pan/core 基因集时模拟不放回抽取的次数, 默认 100;
- `--core`: 核心基因集系数, 默认为 1;
- `--softcore`: 软核心基因集系数, 默认 0.9;
- `--private`: 私有基因集系数, 默认 0.01, 最小为 1 个样本;

特别说明一下后面三个参数, 脚本自动统计输入的样本数/基因集数, 在这个基础上, 乘以相应的系数用于基因集判断, 对于默认参数, 则:
- 出现在全部样本的基因家族视为 core;
- 出现在至少 90% 样本的基因家族视为 softcore;
- 仅有 1%样本(或仅有一个样本) 支持的基因家族视为 private;
- 其余基因家族视为 dispensable;
# 结果说明
主要结果包括三个图两个表:
![PanCoreGeneFamilies](https://cdn.jsdelivr.net/gh/WangZhSi/WangZhSi.github.io@main/_images/PanCoreGeneFamilies.png)
![GeneFamiliesFrequency](https://cdn.jsdelivr.net/gh/WangZhSi/WangZhSi.github.io@main/_images/GeneFamiliesFrequency.png)
![ClassficationDonut](https://cdn.jsdelivr.net/gh/WangZhSi/WangZhSi.github.io@main/_images/ClassficationDonut.png)
主要统计表:
![ClassficationSummary](https://cdn.jsdelivr.net/gh/WangZhSi/WangZhSi.github.io@main/_images/ClassficationSummary.png)

![GeneFamiliesClassfication](https://cdn.jsdelivr.net/gh/WangZhSi/WangZhSi.github.io@main//_images/GeneFamiliesClassfication.png)

# 脚本使用
脚本已经发布在 [GitHub](https://github.com/WangZhSi/Bioinformatics_tool/tree/main/orthoPanCore_visualization) 上, 欢迎大家使用.。</description><guid isPermaLink="true">https://WangZhSi.github.io/post/fan-ji-yin-ji-de-shi-bie-yu-ke-shi-hua.html</guid><pubDate>Mon, 24 Mar 2025 10:20:37 +0000</pubDate></item><item><title>记一次hifiasm问题排查</title><link>https://WangZhSi.github.io/post/ji-yi-ci-hifiasm-wen-ti-pai-cha.html</link><description>hifiasm 是一种快速的单倍型解析从头组装工具，最初专为 PacBio HiFi 测序数据设计。</description><guid isPermaLink="true">https://WangZhSi.github.io/post/ji-yi-ci-hifiasm-wen-ti-pai-cha.html</guid><pubDate>Thu, 06 Feb 2025 03:31:17 +0000</pubDate></item><item><title>植物超级泛基因组的发展与展望</title><link>https://WangZhSi.github.io/post/zhi-wu-chao-ji-fan-ji-yin-zu-de-fa-zhan-yu-zhan-wang.html</link><description>&#13;
# 文献信息&#13;
&#13;
- **标题：** The Developments and Prospects of Plant Super Pangenomes: Demands, Approaches and Applications&#13;
- **DOI:** 10.1016/j.xplc.2024.101230&#13;
- **期刊：** Plant communications&#13;
- **通讯作者：** 中国农业科学院深圳农业基因组研究所商连光研究员和崖州湾国家实验室钱前院士为本文的共同通讯作者&#13;
- **出版日期：** 2024-12-01&#13;
- **网址：** https://doi.org/10.1016/j.xplc.2024.101230&#13;
&#13;
# 超级泛基因组的研究背景与意义&#13;
&#13;
## 背景&#13;
&#13;
自人类基因组计划（HGP）启动以来，基因组学经历了从单一参考基因组到全基因组序列测定的巨大飞跃。</description><guid isPermaLink="true">https://WangZhSi.github.io/post/zhi-wu-chao-ji-fan-ji-yin-zu-de-fa-zhan-yu-zhan-wang.html</guid><pubDate>Tue, 31 Dec 2024 03:36:23 +0000</pubDate></item><item><title>Rust编译的基因组统计工具</title><link>https://WangZhSi.github.io/post/Rust-bian-yi-de-ji-yin-zu-tong-ji-gong-ju.html</link><description>&#13;
All in one 的基因组统计工具, 主要统计了 base 信息, gap 信息, N50 信息, 以便快速了解基因组情况. Rust 编译, 运行速度还可以. 统计信息都比较基础, 写这个工具主要是图一个方便.&#13;
&#13;
# 参数说明&#13;
&#13;
程序主要有以下接口:&#13;
- -f, --fasta: 必须参数, 传入需要统计的基因组&#13;
- -o, --outdir: 可选参数, 输出文件路径, 默认当前路径 (./)&#13;
- --chr_prefix: 可选参数, 指定需要统计的染色体前缀, 默认不过滤. 可以选择只选择 chr 开头的统计, 这样就跳过 contig 不统计了&#13;
- --prefix: 可选参数, 输出文件前缀, 默认 statistics&#13;
&#13;
# 结果说明&#13;
&#13;
程序自动运行, 完成后输出四个统计文件:&#13;
- LC_Basic. txt: 基因组整体统计概览, 如下图&#13;
	![](https://raw.githubusercontent.com/WangZhSi/WangZhSi.github.io/main/_images/Rust%E7%BB%9F%E8%AE%A1_1.png)&#13;
- statistics_BASE. txt: 碱基统计结果, 包含单条序列总长, A, T, G, C, N, G+C 碱基数以及碱基比例, **最后一行包含全基因组统计**;&#13;
- statistics_GAP. txt: GAP统计结果, 序列中的 N 视为 gap, 统计了 gap 位置以及长度, 并生成固定格式的 id 以便使用.&#13;
- statistics_N 50. txt: N 50-N 90 统计结果, 分为 scaffold 和 contig 两类&#13;
&#13;
**特别说明**:&#13;
1. statistics_BASE. txt 中最后一行是全基因组水平的统计结果&#13;
2. GAP 统计结果生成的 bed 文件是 0-base 的左闭右开格式, 即第一个碱基位置索引是 0, 以适配 bedtools&#13;
3. 单条序列视为 scaffold, 若其中包含 N 碱基, 则以 N 碱基为断点生成的序列视为 contig&#13;
4. 若序列 ID 包含空格或 tab 分隔, 自动选取第一个字符串作为识别 ID&#13;
5. 输出结果带千分位符, 若想直接用于后续分析需要自行 `sed` 一下&#13;
&#13;
# 资源消耗&#13;
&#13;
使用程序统计 8 G 禾草(_Leymus chinensis_)基因组, 资源消耗及运行时间如下:&#13;
        ![](https://raw.githubusercontent.com/WangZhSi/WangZhSi.github.io/main/_images/Rust%E7%BB%9F%E8%AE%A1_2.png)&#13;
&#13;
# 程序下载&#13;
&#13;
源码及编译好的程序发布在 GitHub 上, 欢迎下载使用.&#13;
地址: &#13;
https://github.com/WangZhSi/Bioinformatics_tool/tree/main/fasta_stat。</description><guid isPermaLink="true">https://WangZhSi.github.io/post/Rust-bian-yi-de-ji-yin-zu-tong-ji-gong-ju.html</guid><pubDate>Tue, 10 Dec 2024 03:15:04 +0000</pubDate></item><item><title>B染色体</title><link>https://WangZhSi.github.io/post/B-ran-se-ti.html</link><description>&#13;
B 染色体（B chromosomes，Bs）是一些真核生物体内存在的，区别于常规染色体 (A 染色体，A chromosomes, As) 的额外染色体，一般被认为是可有可无的核型成分 (dispensable karyotypic components) $^1$. B 染色体于 1928 年首次定义，与 A 染色体不同，B 染色体不参与常规的减数分裂配对或遗传重组，表现出非孟德尔遗传特征。</description><guid isPermaLink="true">https://WangZhSi.github.io/post/B-ran-se-ti.html</guid><pubDate>Mon, 09 Dec 2024 10:19:08 +0000</pubDate></item><item><title>家蚕的W染色体鉴定</title><link>https://WangZhSi.github.io/post/jia-can-de-W-ran-se-ti-jian-ding.html</link><description># 文献信息&#13;
&#13;
Title: Multiple independent origins of the female W chromosome in moths and butterflies&#13;
Journal: Science Advances&#13;
Year: 2024&#13;
Volume: 10 &#13;
&#13;
家蚕是 ZW 型性别决定，其中雄性是 ZZ 型，雌性是 ZW 型。</description><guid isPermaLink="true">https://WangZhSi.github.io/post/jia-can-de-W-ran-se-ti-jian-ding.html</guid><pubDate>Fri, 12 Jul 2024 06:11:39 +0000</pubDate></item><item><title>HapHiC的安装与使用(二)</title><link>https://WangZhSi.github.io/post/HapHiC-de-an-zhuang-yu-shi-yong-%28-er-%29.html</link><description>&#13;
之前我写过 HapHiC 的安装与使用，有幸被作者摸了过来，指正了我教程中的部分问题，也对不少我含糊的地方作出详细说明和解释。</description><guid isPermaLink="true">https://WangZhSi.github.io/post/HapHiC-de-an-zhuang-yu-shi-yong-%28-er-%29.html</guid><pubDate>Fri, 12 Jul 2024 05:59:32 +0000</pubDate></item><item><title>类似GitHub Contributions Chart的R实现</title><link>https://WangZhSi.github.io/post/lei-si-GitHub%20Contributions%20Chart-de-R-shi-xian.html</link><description>最近在做用户行为分析，我选择了用 Rmd 来做，好迁移，好修改，部署简单；其中一块结果我希望使用类似 GitHub Contributions Chart 的样式做展示。</description><guid isPermaLink="true">https://WangZhSi.github.io/post/lei-si-GitHub%20Contributions%20Chart-de-R-shi-xian.html</guid><pubDate>Wed, 29 May 2024 06:28:45 +0000</pubDate></item><item><title>HapHiC的安装与使用(一)</title><link>https://WangZhSi.github.io/post/HapHiC-de-an-zhuang-yu-shi-yong-%28-yi-%29.html</link><description>**20240712更新:**&#13;
------&#13;
软件作者看到了这篇教程, 指出其中错误, 并对分析挂载流程提出了相当多的宝贵意见, 具体内容已整合到一篇新的[文章](https://wangzhsi.github.io/post/HapHiC-de-an-zhuang-yu-shi-yong-%28-er-%29.html), 请移步查看.&#13;
&#13;
以下原文:&#13;
------&#13;
&#13;
[HapHiC](https://github.com/zengxiaofei/HapHiC) 是一款 reference free 的基因组 scaffolding 软件，论文预印本发表在 [bioRxiv](https://www.biorxiv.org/content/10.1101/2023.11.18.567668v1.full) 上。</description><guid isPermaLink="true">https://WangZhSi.github.io/post/HapHiC-de-an-zhuang-yu-shi-yong-%28-yi-%29.html</guid><pubDate>Fri, 24 May 2024 07:49:41 +0000</pubDate></item></channel></rss>